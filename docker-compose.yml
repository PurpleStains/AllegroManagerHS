services:
    allegromanager:
        image: ${DOCKER_REGISTRY-}allegromanager
        container_name: AllegroManager
        build:
            context: .
            dockerfile: AllegroManager/Dockerfile
        ports:
        - 8081:8080
        depends_on:
            db:
                condition: service_healthy

    db:
        image: mcr.microsoft.com/mssql/server:2022-latest
        healthcheck:
            test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P "$${SA_PASSWORD}" -C -Q "SELECT 1" -b -o /dev/null
            interval: 5s
            retries: 2
            start_period: 30s
            timeout: 3s
        container_name: AllegroManagerDB
        environment:
            SA_PASSWORD: ${SA_PASSWORD}
            ACCEPT_EULA: Y
        ports:
        - 1433:1433
        expose:
        - '1433'
        volumes:
        - my-db:/var/opt/mssql  
        - ./AllegroManager.Database.Build:/sql-scripts
        - ./entrypoint.sh:/entrypoint.sh 
        command: /bin/bash /entrypoint.sh

    next-app:
        container_name: next-app
        build:
            context: ./UI/integration-portal//next-app
            dockerfile: prod.Dockerfile
            args:
                ENV_VARIABLE: ${ENV_VARIABLE}
                NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}
        restart: always
        ports:
        - 3001:3000
        networks:
        - my_network

    postgres:
        image: postgres:16.2
        volumes:
          - postgres_data:/var/lib/postgresql/data
        environment:
          POSTGRES_DB: ${POSTGRES_DB}
          POSTGRES_USER: ${POSTGRES_USER}
          POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        networks:
          - keycloak_network

    keycloak:
        image: quay.io/keycloak/keycloak:23.0.6
        command: start
        environment:
          KC_HOSTNAME: localhost
          KC_HOSTNAME_PORT: 8080
          KC_HOSTNAME_STRICT_BACKCHANNEL: false
          KC_HTTP_ENABLED: true
          KC_HOSTNAME_STRICT_HTTPS: false
          KC_HEALTH_ENABLED: true
          KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
          KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
          KC_DB: postgres
          KC_DB_URL: jdbc:postgresql://postgres/${POSTGRES_DB}
          KC_DB_USERNAME: ${POSTGRES_USER}
          KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
        ports:
          - 8080:8080
        restart: always
        depends_on:
          - postgres
        networks:
          - keycloak_network

volumes:
    my-db:
    postgres_data:
        driver: local

networks:
  my_network:
  keycloak_network:
    driver: bridge  